snippet fun
	create or replace function ${1:func_name} (${2:args}) returns ${3:void} as $$
	${4:declare}
	begin
		${0}
	end;
	$$ language plpgsql;
snippet funjson
	create or replace function ${1:func_name} (p_request json) returns json as $$
	declare
		v_result text := '{}';
	begin
		return v_result::json;
	end;
	$$ language plpgsql;
snippet do
	do $do$
	${1:declare}
	begin
		${0}
	end;
	$do$ language plpgsql;
snippet dopy
	do $do$
	${1:declare}
	begin
		${0}
	end;
	$do$ language plpython;
snippet dopyu
	do $do$
	${1:declare}
	begin
		${0}
	end;
	$do$ language plpythonu;
snippet funsql
	create or replace function ${1:func_name} (${2}) returns ${3:void} as $$
		${0}
	end;
	$$ language sql;
snippet dropfun
	drop function if exists ${1:function} (${2:arguments});
snippet exe
	execute '${1:select 1}';
snippet exeu
	execute '${1:select $1}' using ${2:var};
snippet exei
	execute '${1:select $1}' into ${2:var};
snippet exeui
	execute '${1:select $1}' using ${2:using_var} into ${3:into_var};
snippet creinx
	create index ${1:index} on ${2:table} (${0});
snippet addcol
	alter table ${1:table} add (${2:column} ${0:type});
snippet if
	if ${1:condition} then
		${0}
	end if;
snippet ifn
	if not ${1:condition} then
		${0}
	end if;
snippet col
	${1:name}	${2:type}	${3:default ''}	${0:not null}
snippet tcol
	${1:name} text ${2:default ''}${0:not null}
snippet icol
	${1:name} integer ${2:default 0} ${0:not null}
snippet scol
	${1:name} timestamp with timezone ${2:default now()} ${0:not null}
snippet dcol
	${1:name} double precicison ${2:default now()} ${0:not null}
snippet jcol
	${1:name} json ${2:default now()} ${0:not null}
